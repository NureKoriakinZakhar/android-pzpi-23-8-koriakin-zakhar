Харківський університет радіоелектроніки
Факультет комп'ютерних наук
Кафедра програмної інженерії







ЗВІТ
до практичного заняття 2 з дисципліни
"Програмування під Android"
на тему "Файли розмітки Layout та методи Activity" 






Виконав ст. гр ПЗПІ-23-8
Корякін Захар Павлович


Перевірив 
ст. викладач кафедри ПІ
Сокорчук Ігор Петрович








Харків 2024


МЕТА
     
     Метою цієї роботи є ознайомлення із основами розробки інтерфейсу користувача в Android, включаючи створення та налаштування розмітки екрана, управління життєвим циклом Activity, а також використання різних методів для збереження стану та забезпечення плавного користувацького досвіду.

ЗАВДАННЯ
     
     Створити простий інтерфейс з використанням елементів, таких як TextView, Button, ImageView та налаштувати розташування елементів, використовуючи LinearLayout. 
     Створити розмітку, що містить кілька кнопок, розташованих одна під одною. Задати для кожної кнопки властивості layout_width та layout_height, поексперементувати з різними значеннями, як wrap_content та match_parent.
     Дослідити та використати такі атрибути, як padding, margin, gravity та layout_gravity для налаштування відступів та вирівнювання елементів.
     Налаштувати текстові поля TextView з різними стилями (розмір шрифту, колір, жирність тощо).
     Додати до кнопки обробник події натискання у файлі MainActivity.java.
     Створити FrameLayout та додати до нього кілька єлементів, та побачити, як вони накладаються один на одного. 
     Створити GridLayout та додати у нього кілька єлементів у вигляді таблиці, задаючи кількість стовпців і рядків.
      Додати до кожного методу життєвого циклу (onCreate, onStart, onResume тощо) функцію виведення повідомлень у лог (Log.d) для відстеження послідовності викликів. Зрозуміти порядок викликів методів під час запуску та закриття Activity.
     Змінити орієнтацію пристрою (з портретної на ландшафтну) та спостерігти за викликами методів життєвого циклу у логах.
     Створити поле для введення тексту (EditText) в Activity, а також перевизначити методи onSaveInstanceState() і onRestoreInstanceState() для збереження та відновлення тексту під час зміни орієнтації екрана.
     Створити друге Activity, додати кнопку для переходу, а також відстежувати виклики методів життєвого циклу.
     Додати кнопку, яка викликає метод finish() та відстежити послідовність викликів методів життєвого циклу.

ХІД РОБОТИ

     За допомогою коду створив простий інтерфейс з використанням елементів, таких як TextView, Button, ImageView та налаштував розташування елементів, використовуючи LinearLayout [див. Додаток А]. 
     За допомогою коду створив розмітку, що містить кілька кнопок, розташованих одна під одною. Задав для кожної кнопки властивості layout_width, layout_height, wrap_content та match_parent [див. Додаток Б].
     Дослідив та використав такі атрибути, як padding, margin, gravity та layout_gravity для налаштування відступів та вирівнювання елементів.
     Налаштував текстові поля TextView з різними стилями (розмір шрифту, колір, жирність тощо) [див. Додаток А].
     Додав до кнопки обробник події натискання у файлі MainActivity.java [див. Додаток В].
     За допомогою коду створив GridLayout та FrameLayout. Додав до них кілька єлементів, та визначив, що перший дочірній елемент  FrameLayout накладається на другий, другий на третій і так далі [див. Додаток Г].
     Додав до кожного методу життєвої функції виведення повідомлень у лог (Log.d) для відстеження послідовності викликів. Та зрозумів, що при запуску Activity спочатку викликається метод onCreate(), де відбувається ініціалізація інтерфейсу. Потім викликається onStart(), коли активність стає видимою, і далі onResume(), коли активність готова до взаємодії. При закритті Activity спочатку викликається onPause(), що сигналізує про втрату фокусу, далі onStop(), коли активність більше не видима, і нарешті onDestroy(), де відбувається очищення ресурсів. Додатково можуть викликатися onRestart() перед onStart() при поверненні з зупиненого стану та onSaveInstanceState() перед onPause() для збереження стану [див. Додаток Д].
     Змінивши орієнтацію пристрою спостерігав за викликами методів життєвого циклу у логах. При повороті екрану відбувається перезапуск Activity. Спочатку викликаються методи onPause(), onStop(), і onDestroy(), щоб знищити активність. Потім створюється нова інстанція активності з викликами onCreate(), onStart(), і onResume(). 
     Створив поле для введення тексту (EditText) в Activity, а також перевизначив методи onSaveInstanceState() і onRestoreInstanceState() для збереження та відновлення тексту під час зміни орієнтації екрана [див. Додаток Е].
     Створив друге Activity, додав кнопку для переходу, а також відстежував виклики методів життєвого циклу. При переході з однієї активності на іншу спочатку викликається метод onPause() у активності, потім onStop(), і, можливо, onDestroy(), якщо активність закривається. Після цього у новій активності викликаються методи onCreate(), onStart(), і onResume().
     Додав кнопку, яка викликає метод finish() та відстежив послідовність викликів методів життєвого циклу. При натисканні виклику методу finish() у Activity спочатку викликається метод onPause(), потім onStop(), і нарешті onDestroy().
     
ВИСНОВКИ
     
     Посилання на відео в YouTube: https://youtu.be/Iyot5xwJWIw
     
     У процесі розробки Android-додатка були реалізовані основні елементи інтерфейсу, такі як TextView, Button і ImageView, з використанням LinearLayout, GridLayout і FrameLayout. Налаштування відступів і вирівнювання підвищило зручність використання.
     Дослідження методів життєвого циклу Activity допомогло зрозуміти їх ініціалізацію та завершення, а логування викликів методів дозволило проаналізувати реакцію системи на події. Додавання EditText з перевизначенням onSaveInstanceState() забезпечило збереження тексту при зміні орієнтації.
     Створення другого Activity підтвердило важливість управління життєвим циклом для плавної роботи додатка, що розширило знання про розробку Android-додатків.
      

ВИКОРИСТАННІ ДЖЕРЕЛА

1. YouTube. " Розробка Android Додатка "Месенджер" Частина 1" https://www.youtube.com/watch?v=UEKI4I9RV24. Дата доступу: 9 жовтня 2024 року.
2. YouTube. " Розробка Android Додатка "Месенджер" Частина 2" https://www.youtube.com/watch?v=PZXJNF1YH4k. Дата доступу: 9 жовтня 2024 року.
3. YouTube. " L2 || Методи RecyclerView.Adapter. onCreateViewHolder onBindViewHolder || || Списки. Урок 2" https://www.youtube.com/watch?v=BToxMyJv-fs. Дата доступу: 9 жовтня 2024 року.
4. Національний університет радіоелектроніки. https://dl.nure.ua/. Дата доступу: 9 жовтня 2024 року.























ДОДАТОК А
LinearLayout з елементами

1  <LinearLayout
2      android:id="@+id/linearLayout"
3      android:layout_width="match_parent"
4      android:layout_height="match_parent"
5      android:orientation="vertical"
6      android:padding="16dp"
7      android:gravity="center"
8      tools:layout_editor_absoluteX="-16dp"
9      tools:layout_editor_absoluteY="-44dp">

10      <TextView
11          android:id="@+id/textView"
12          android:layout_width="wrap_content"
13          android:layout_height="wrap_content"
14          android:layout_marginTop="16dp"
15          android:gravity="center"
16          android:padding="8dp"
17          android:text="Styled TextView"
18          android:textStyle="bold"
19          android:textColor="#FF0000"
20          android:textSize="20sp" />

21      <Button
22          android:id="@+id/button"
23          android:layout_width="159dp"
24          android:layout_height="wrap_content"
25          android:layout_marginBottom="1dp"
26          android:gravity="center"
27          android:onClick="onButtonClick"
28          android:padding="8dp"
29          android:text="Click Me" />

30      <ImageView
31          android:id="@+id/imageView"
32          android:layout_width="84dp"
33          android:layout_height="85dp"
34          android:src="@drawable/ic_launcher_foreground" />
35  </LinearLayout>
      
      
      
      
      
ДОДАТОК Б
Розмітка з трома кнопками

1  <LinearLayout
2      android:layout_width="264dp"
3      android:layout_height="wrap_content"
4      android:orientation="vertical"
5      android:padding="16dp">

6      <Button
7          android:id="@+id/button1"
8          android:layout_width="match_parent"
9          android:layout_height="wrap_content"
10         android:layout_margin="2dp"
11         android:text="Button 1" />

12     <Button
13         android:id="@+id/button2"
14         android:layout_width="match_parent"
15         android:layout_height="wrap_content"
16         android:layout_margin="2dp"
17         android:text="Button 2" />

18     <Button
19         android:id="@+id/button3"
20         android:layout_width="match_parent"
21         android:layout_height="wrap_content"
22         android:layout_margin="2dp"
23         android:text="Button 3" />
24 </LinearLayout>
      
      
      
      
      
      
      
      
      
      
      
      
      
ДОДАТОК В
Обробник події натискання кнопки

1  public void onButtonClick(View view) {
2      Toast.makeText(this, "Button Clicked!", Toast.LENGTH_SHORT).show();
3  }
      
      
      
      
      
      
      
      
      
      
      
      



























ДОДАТОК Г
FrameLayout з елементами

1  <FrameLayout
2      android:layout_width="418dp"
3      android:layout_height="136dp"
4      tools:layout_editor_absoluteX="-7dp"
5      tools:layout_editor_absoluteY="400dp">

6      <ImageView
7          android:layout_width="211dp"
8          android:layout_height="match_parent"
9          android:scaleType="centerCrop"
10         android:src="@drawable/ic_launcher_foreground" />

11     <TextView
12         android:layout_width="wrap_content"
13         android:layout_height="wrap_content"
14         android:layout_gravity="center"
15         android:text="Накладений текст"
16         android:textColor="#FF0000"
17         android:textSize="24sp" />

18     <Button
19         android:layout_width="wrap_content"
20         android:layout_height="wrap_content"
21         android:layout_gravity="bottom|end"
22         android:layout_margin="43dp"
23         android:text="Кнопка зверху" />
24 </FrameLayout>

25 <GridLayout
26     android:layout_width="match_parent"
27     android:layout_height="wrap_content"
28     android:rowCount="3"
29     android:columnCount="2"
30     android:padding="16dp"
31     android:alignmentMode="alignMargins"
32     android:layout_gravity="center">

33     <TextView
34         android:layout_width="wrap_content"
35         android:layout_height="wrap_content"
36         android:text="Ім'я"
37         android:layout_row="0"
38         android:minHeight="48dp"
39         android:layout_column="0"/>

40     <EditText
41         android:layout_width="0dp"
42         android:layout_height="wrap_content"
43         android:layout_row="0"
44         android:layout_column="1"
45         android:layout_columnWeight="1"
46         android:minHeight="48dp"
47         android:hint="Введіть ім'я"/>

48     <TextView
49         android:layout_width="wrap_content"
50         android:layout_height="wrap_content"
51         android:text="Прізвище"
52         android:layout_row="1"
53         android:minHeight="48dp"
54         android:layout_column="0"/>

55     <EditText
56         android:layout_width="0dp"
57         android:layout_height="wrap_content"
58         android:layout_row="1"
59         android:layout_column="1"
60         android:layout_columnWeight="1"
61         android:minHeight="48dp"
62         android:hint="Введіть прізвище"/>

63     <TextView
64         android:layout_width="wrap_content"
65         android:layout_height="wrap_content"
66         android:text="Email"
67         android:layout_row="2"
68         android:minHeight="48dp"
69         android:layout_column="0"/>

70     <EditText
71         android:layout_width="0dp"
72         android:layout_height="wrap_content"
73         android:layout_row="2"
74         android:layout_column="1"
75         android:layout_columnWeight="1"
76         android:hint="Введіть email"
77         android:inputType="textEmailAddress"
78         android:minHeight="48dp" />

79 </GridLayout>
      
      

































ДОДАТОК Д
Функції виведення Activity повідомлень у лог

1  @Override
2  protected void onStart() {
3      super.onStart();
4      Log.d("Повідомлення Активність2", "onStart called");
5  }

6  @Override
7  protected void onResume() {
8      super.onResume();
9      Log.d("Повідомлення Активність2", "onResume called");
10 }

11 @Override
12 protected void onPause() {
13     super.onPause();
14     Log.d("Повідомлення Активність2", "onPause called");
15 }

16 @Override
17 protected void onStop() {
18     super.onStop();
19     Log.d("Повідомлення Активність2", "onStop called");
20 }

21 @Override
22 protected void onDestroy() {
23     super.onDestroy();
24     Log.d("Повідомлення Активність2", "onDestroy called");
25 }











ДОДАТОК Е
Методи onSaveInstanceState() і onRestoreInstanceState()

1  @Override
2  protected void onSaveInstanceState(Bundle outState) {
3      super.onSaveInstanceState(outState);
4      EditText editText = findViewById(R.id.editText);
5      outState.putString("savedText", editText.getText().toString());
6      Log.d("Повідомлення Активність1", "onSaveInstanceState called");
7  }

8  @Override
9  protected void onRestoreInstanceState(Bundle savedInstanceState) {
10     super.onRestoreInstanceState(savedInstanceState);
11     Log.d("Повідомлення Активність1", "onRestoreInstanceState called");
12 }

